{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "246a94b1-574e-478e-a225-ccb817839f18",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[1, 2],\n",
       "       [3, 4],\n",
       "       [5, 6]])"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "arr1=np.array([[1,2],[3,4]])\n",
    "arr2=np.array([[5,6]])\n",
    "np.concatenate((arr1,arr2),axis=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "260ba8ca-fa36-4a57-aa83-6eadfdd9e7a5",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[1, 2, 5, 6],\n",
       "       [3, 4, 3, 4]])"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "arr1=np.array([[1,2],[3,4]])\n",
    "arr2=np.array([[5,6],[3,4]])\n",
    "np.concatenate((arr1,arr2),axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "ce5932bf-a641-4c52-8f4f-23d7260c84f0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[1, 2, 3],\n",
       "       [4, 5, 6]])"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "arr3=np.array([1,2,3])\n",
    "arr4=np.array([4,5,6])\n",
    "np.vstack((arr3,arr4))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "b3fc6fea-7ca8-4af5-9124-20f5499b4f29",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([1, 2, 3, 4, 5, 6])"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "arr1=np.array([1,2,3])\n",
    "arr2=np.array([4,5,6])\n",
    "np.hstack((arr1,arr2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "540e5f5e-0ac9-40bc-bc96-419312fa17e8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([False, False, False,  True,  True,  True])"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "arr=np.array([1,2,3,4,5,6])\n",
    "mask=arr>3\n",
    "mask"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "1859ff88-20b1-4979-bede-e2186265140d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([4, 5, 6])"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "arr[mask]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "758336a7-ca92-4509-aef1-510948b98895",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([False, False,  True,  True,  True, False])"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import numpy as np\n",
    "arr=np.array([1,2,3,4,5,6])\n",
    "(arr>2) & (arr<6)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "844238b1-b5d0-4f92-95a3-1f946a35e6c4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([3, 4, 5])"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "arr[(arr>2) & (arr<6)]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "40951059-8499-4d39-a901-182b15f970d3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([1, 2, 3, 6])"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "arr[(arr<=3) | (arr>5)]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "94de580a-cda9-467b-b460-9b1765c6ee65",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Values>20: [25 30 30 40 50]\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "matrix=np.array([\n",
    "    [10,25,30],\n",
    "    [30,40,50]\n",
    "])\n",
    "print(\"Values>20:\",matrix[matrix>20])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "599dfdad-5d88-44c6-94c7-ff8d68b359a5",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "values>90: [92 95 94]\n"
     ]
    }
   ],
   "source": [
    "scores=np.array([85,92,78,88,95,72,89,94,68,90])\n",
    "print(\"values>90:\",scores[scores>90])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "09f934fc-815f-4b20-a389-3548792a58cc",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "values between 70 to 80 are: [78 72]\n"
     ]
    }
   ],
   "source": [
    "scores=np.array([85,92,78,88,95,72,89,94,68,90])\n",
    "print(\"values between 70 to 80 are:\",scores[(scores>70) & (scores<80)])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "0e5813e2-72d6-44d5-8d5b-2fbd017efc34",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "even numbers are: [ 2  4  6  8 10 12 14]\n"
     ]
    }
   ],
   "source": [
    "num=np.array([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15])\n",
    "even_num=num[num%2==0]\n",
    "print(\"even numbers are:\", even_num)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "82ea80cd-2717-4540-9e5e-3512e2be401c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Divisible by 3 [ 3  6  9 12 15]\n"
     ]
    }
   ],
   "source": [
    "div_by_3 = num[num % 3 == 0]\n",
    "print(\"Divisible by 3\", div_by_3)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8700f8db-c7c1-4a6f-a80c-9446313a79eb",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.13.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
